Defination:
	Operation ID: unique ID of each request
	Drive ID: Logical Volume ID
	Service UID: Cloud Drive ID
	File name: display file name
	Remote File Name: actual cloud drive file name (should be unique)
	Remote File Path: actual cloud drive directory + Remote File name

Protocol:

case 0x00 00000000: client
	4 byte int: send account id
	32byte string: token_hash sha256

case 0x00 00000000: server reject

case 0x01 00000001: server accept connection

case 0x02 00000010: client get Service

case 0x02 00000010: server get Service
	[
		4 byte int: service UID
		8 byte int: Available Size
		2 byte int: service name length "n"
		n byte char: service name
	]*

case 0x03 00000011: client get Drive

case 0x03 00000011: server get Drive
	[
		4 byte int: Drive ID
		2 byte int: number of Service
		[
			4 byte int: Service UID
			8 byte int: Allocate Size
		]+
		2 byte int: Drive name length "n"
		n byte char: Drive name
	]*

case 0x04 00000100: client ls dir/file
	1 byte int: Operation ID
	4 byte int: Drive ID
	2 byte int: dir path length n
	n byte str: dir path

case 0x04 00000100: server ls dir/file
	1 byte int: Operation ID
	2 byte int: number of files
	[
		4 byte int: File ID
		2 byte int: File name length "n"
		n byte char: File name
		1 byte boolean: is File
		case is File == false

		case is File == true
			8 byte int: file size
			8 byte int: number of chunk
//			4 byte int: number of separate files
//			[
//				4 byte int: remote File name
//				n byte char: remote file name
//				4 byte int: Service UID
//			]+
	]*

// file opearation, 0x20 should exist
case 0x20 00100000: client put (first chunk upload)
	1 byte int: Operation ID
	4 byte int: Parent ID
	8 byte int: File size
	2 byte int: File Name length "n"
	n byte char: File Name
	4 byte int: Drive ID
	4 byte int: Service UID
	4 byte int: File chunk sequence number
	2 byte int: Remote File name length "m"
	m byte char: Remote File name
	4 byte int: send file chunk length "k"
	k byte: File chuck Content

case 0x21 00100001: client put (other chunks upload)
	1 byte int: Operation ID
	4 byte int: File ID
	4 byte int: Drive ID
	4 byte int: Service UID
	4 byte int: File chunk sequence number
	2 byte int: Remote File name length "m"
	m byte char: Remote File name
	4 byte int: send file chunk length "k"
	k byte: File chuck Content

case 0x21 00100001: server put (first chunk upload && other chunks upload)
	1 byte int: Operation ID
	4 byte int: File ID
	4 byte int: File chunk sequence number
	1 byte int: status ( 0 is file created, other are error code)
	4 byte int: recv len (if status is 0, then it exist 4byte file len, otherwise, 0byte)

case 0x22 00100010: client get
	1 byte int: Operation ID
	4 byte int: Drive ID
	4 byte int: File ID

case 0x22 00100010: server get (chunk first time download only)
	1 byte int: Operation ID
	4 byte int: File chunk sequence number
	4 byte int: send file length
	4 byte int: send current packet payload len "n" (Range: 0 - payload len)
	n byte: (part of) file payload

case 0x23 00100011: server get (chunk continue download)
	1 byte int: Operation ID
	4 byte int: File chunk sequence number
	4 byte int: send start byte position
	4 byte int: send current packet payload len
	n byte: part of file payload

// if File ID is not empty, do nothing at current stage
case 0x28 00101000: client delete
	1 byte int: Operation ID
	4 byte int: Drive ID
	2 byte int: File ID

case 0x28 00101000: server delete
	1 byte int: Operation ID
	1 byte int: status ( 0 is file delete, other are error code)

case 0x2A 00101010: client mkdir
	1 byte int: Operation ID
	4 byte int: Parent ID
	8 byte int: File size (always 0)
	2 byte int: File Name length "n"
	n byte char: File Name
	4 byte int: Drive ID

case 0x2A 00101010: server mkdir
	1 byte int: Operation ID
	1 byte int: status ( 0 is file made, other are error code)

// close code,
case 0x88 10001000: server close connection (server only)