Defination:
	Operation ID: unique ID of each request
	Drive ID: Logical Volume ID
	Service UID: Cloud Drive ID
	File name: display file name
	Remote File Name: actual cloud drive file name (should be unique)
	Remote File Path: actual cloud drive directory + Remote File name

Protocol:

case 0x00 00000000: client
	1 byte int: Operation ID
	4 byte int: send account id
	32byte string: token_hash sha256

case 0x00 00000000: server reject
	1 byte int: Operation ID

case 0x01 00000001: server accept connection
	1 byte int: Operation ID

case 0x02 00000010: client get Service
	1 byte int: Operation ID

case 0x02 00000010: server get Service
	1 byte int: Operation ID
	2/0 byte int: number of Service ( first packet ) / null ( other packet )
	(
		4 byte int: service UID
//		8 byte int: Available Size // record not found
//		1 byte int: service name length "n" // record not found
//		n byte char: service name // record not found
	)*

case 0x03 00000011: client get Drive
	1 byte int: Operation ID

case 0x03 00000011: server get Drive
	1 byte int: Operation ID
	2/0 byte int: number of Drive ( first packet ) / null ( other packet )
	(
		4 byte int: Drive ID
		4 byte int: Algorithm ID
		8 Byte int: Total Size
		1 byte int: Drive name length "n"
		n byte char: Drive name
		2 byte int: number of Service
		(
			4 byte int: Service UID
			8 byte int: Allocate Size
		)+
	)*

case 0x04 00000100: client ls dir/file
	1 byte int: Operation ID
	4 byte int: Drive ID
	8 byte int: Parent ID

case 0x04 00000100: server ls dir/file
	1 byte int: Operation ID
	2/0 byte int: number of files ( first packet ) / null ( other packet )
	(
		8 byte int: File ID
		8 byte int: File size
		1 byte int: File name length "n"
		n byte char: File name
	)*

// file opearation, 0x20 should exist

case 0x20 00100000: client [new / udpate] [directory / file]
	1 byte int: Operation ID
	4 byte int: Drive ID
	8 byte int: File ID
	8 byte int: Parent ID
	8 byte int: File size (always 0)
	1 byte int: File Name length "n"
	n byte char: File Name

case 0x20 00100000: server new directory / file
	1 byte int: Operation ID
	8 byte int: File ID ( not 0 is file made/update, 0 is file create fail)

case 0x21 00100001: client put
	1 byte int: Operation ID
	4 byte int: Drive ID
	4 byte int: Service UID
	8 byte int: File ID
	4 byte int: File chunk sequence number
	1 byte int: Remote File name length "m"
	m byte char: Remote File name
	4 byte int: send file chunk length "k"
	k byte: File chuck Content

case 0x21 00100001: server put
	1 byte int: Operation ID
	4 byte int: File chunk sequence number
	1 byte int: status ( 0 is file created, other are error code)
	4 byte int: recv len (if status is 0, then it exist 4byte file len, otherwise, 0byte)

case 0x22 00100010: client get
	1 byte int: Operation ID
	4 byte int: Drive ID
	8 byte int: File ID

case 0x22 00100010: server get (info)
	1 byte int: Operation ID
	4 byte int: Total number of chunk
	8 byte int: Total file size

case 0x23 00100011: server get (chunk)
	1 byte int: Operation ID
	4 byte int: File chunk sequence number
	4 byte int: send chunk length (first chunk) / send chunk start byte position (continuous chunk)
	4 byte int: send current packet payload len "n" (Range: 0 - payload len)
	n byte: part of chunk payload

case 0x28 00101000: client delete
	1 byte int: Operation ID
	4 byte int: Drive ID
	8 byte int: File ID

case 0x28 00101000: server delete
	1 byte int: Operation ID
	4 byte int: Drive ID
	8 byte int: Parent ID
	8 byte int: File ID
	1 byte int: file name "n"
	n byte char: file name

case 0x29 00101000: client clear chunk
	1 byte int: Operation ID
	4 byte int: Drive ID
	8 byte int: File ID

case 0x29 00101000: server clear chunk
	1 byte int: Operation ID
	1 byte int: status

// close code,
case 0x88 10001000: server close connection (server only)